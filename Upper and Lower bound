  vector<int> searchRange(vector<int>& nums, int target) {
        if(!nums.size()) return {-1,-1};
        auto pos = lower_bound(nums, target);
        if(nums[pos] != target)
            return {-1,-1};
        int l = pos;
        pos = upper_bound(nums, target);
        if(nums[pos] != target)
            pos--;
        int r = pos;
        return {l,r};
    }
    int lower_bound(vector<int> nums, int target){
        int l = 0, r = nums.size()-1, m = 0;
        while(l < r) {
            m = (l+r)/2;
            if(nums[m] < target)
                l = m+1;
            else 
                r = m;
        }
        return r;
    }
    int upper_bound(vector<int> nums, int target){
        int l = 0, r = nums.size()-1, m = 0;
        while(l < r) {
            m = (l+r)/2;
            if(nums[m] <= target)
                l = m+1;
            else 
                r = m;
        }
        return r;
    }
